[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_82A0EEA15157355957202020FF12201B-if00 
x_offset: 0                     # Assumes using stew675 beacon mount's offsets
y_offset: -18.8                 # Assumes using stew675 beacon mount's offsets
mesh_main_direction: x
mesh_runs: 2
contact_max_hotend_temperature: 270  # 180
home_xy_position: 152, 152      # update with your safe Z home position
home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 300
home_y_before_x: True
home_method: proximity
home_method_when_homed: proximity
home_autocalibrate: never
home_gcode_pre_x: _BEACON_HOME_PRE_X
home_gcode_post_x: _BEACON_HOME_POST_X
home_gcode_pre_y: _BEACON_HOME_PRE_Y
home_gcode_post_y: _BEACON_HOME_POST_Y
contact_activate_gcode: _BEACON_CONTACT_PRE_Z
contact_deactivate_gcode: _BEACON_CONTACT_POST_Z
contact_sensitivity: 0          # You can try the default of 0, but if your
                                # automatic Z is too high, then put back to 1
contact_latency_min: 3          # You can try the default of 0, but if your
                                # automatic Z is high, put back to 2 or 3
autocal_tolerance: 0.006

[gcode_macro _APPLY_NOZZLE_OFFSET]
description: Apply a fixed global Z offset and print info
variable_z_homing_temp: 190               # Temperature for Z homing (for reference)
variable_contact_compensation: 0.025       # Static offset for contact latency/hotend expansion
variable_hotend_temp: 250                 # Intended print temp (for reference)
gcode:
    # Assign variables (for logging and future use)
    {% set z_home_temp = printer["gcode_macro _APPLY_NOZZLE_OFFSET"].z_homing_temp|float %}
    {% set contact_comp = printer["gcode_macro _APPLY_NOZZLE_OFFSET"].contact_compensation|float %}
    {% set hotend_temp = printer["gcode_macro _APPLY_NOZZLE_OFFSET"].hotend_temp|float %}

    RESPOND PREFIX=âš™ MSG="Z Home Temp={z_home_temp}, Contact Comp.={contact_comp}, Print Temp={hotend_temp}, Applying Z Offset {contact_comp}mm"
    SET_GCODE_OFFSET Z={contact_comp}

[gcode_macro APPLY_FILAMENT_OFFSET]
description: Apply a Z offset adjustment for a specific filament
gcode:
    {% set filament_z = params.Z|default(0)|float %}
    { action_respond_info("Setting Filament Offset to %.3fmm" % (filament_z)) }
    SET_GCODE_OFFSET Z_ADJUST={filament_z} MOVE=1 SPEED=2

[gcode_macro _FIND_Z_EQUALS_ZERO]
variable_hotend_temp: 190  # Set to your probe/homing temperature
gcode:
    CLEAR_NOZZLE
    M109 S{printer["gcode_macro _FIND_Z_EQUALS_ZERO"].hotend_temp}    # Heat to probe temp
    SET_GCODE_OFFSET Z=0                                             # Reset any Z offset
    G28 X Y
    Z_TILT_ADJUST                                                    # Level bed if applicable
    G28 Z METHOD=CONTACT CALIBRATE=1                                 # Home Z with Beacon/contact
    G1 Z3 F600                                                       # Raise bed/nozzle 3mm

[gcode_macro G29]
description: Home all, generate a bed mesh, and apply global Z nozzle offset
gcode:
    _FIND_Z_EQUALS_ZERO
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE RUNS=2 PROFILE=adaptive ADAPTIVE=1
    _APPLY_NOZZLE_OFFSET

[gcode_macro _BEACON_HOME_PRE_X]
gcode:
    {% set RUN_CURRENT = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT * 0.6}

[gcode_macro _BEACON_HOME_POST_X]
gcode:
    {% set RUN_CURRENT = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    # Move away
    G1 X20 F9000
    M400
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT}

[gcode_macro _BEACON_HOME_PRE_Y]
gcode:
    {% set RUN_CURRENT = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT * 0.8}       

[gcode_macro _BEACON_HOME_POST_Y]
gcode:
    {% set RUN_CURRENT = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    # Move away
    G1 Y20 F9000
    M400
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT}

[gcode_macro _BEACON_CONTACT_PRE_Z]
gcode:

[gcode_macro _BEACON_CONTACT_POST_Z]
gcode:
    G1 Z3 F600              # Ensure the bed is moved away from the nozzle
    M400

[gcode_macro SCREW_ADJUST_START]
gcode:
    M84
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    G28
    Z_TILT_ADJUST
    G1 X{printer.configfile.settings.beacon.home_xy_position[0]} Y{printer.configfile.settings.beacon.home_xy_position[1]} F7200
    G28 Z METHOD=CONTACT CALIBRATE=0

[gcode_macro SFL]
description: Get zoffset at front-left bed adjustment screw position
gcode:
    G1 X25 Y28 F6000
    PROBE PROBE_METHOD=CONTACT

[gcode_macro SFR]
description: Get zoffset at front-right bed adjustment screw position
gcode:
    G1 X285 Y25 F6000
    PROBE PROBE_METHOD=CONTACT

[gcode_macro SBL]
description: Get zoffset at back-left bed adjustment screw position
gcode:
    G1 X25 Y281 F6000
    PROBE PROBE_METHOD=CONTACT

[gcode_macro SBR]
description: Get zoffset at back-right bed adjustment screw position
gcode:
    G1 X285 Y281 F6000
    PROBE PROBE_METHOD=CONTACT
